buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:"+project."springboot.version")
    }
}

plugins {
    id "org.asciidoctor.convert" version '1.5.3'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'andservice-read-api'
    version =  '0.0.1'
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}
sourceCompatibility = project."java.version"
targetCompatibility = project."java.version"

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-snapshot' }
}
ext['spring-restdocs.version'] = '1.2.1.RELEASE'

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.mockito:mockito-core:'+project."mockito.version")

    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:${project.ext['spring-restdocs.version']}"

    //Test Dependencies
    testCompile('com.jayway.restassured:rest-assured:'+project.'restassured.version')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('org.testng:testng:'+project.'testng.version')
}

ext {
    snippetsDir = file('build/docs/generated-snippets')
}

test {
    outputs.dir snippetsDir
    useTestNG()
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    outputDir "build/asciidoc"
    dependsOn test
    sourceDir 'src/main/resources/static/asciidoc'
}

/**
 * Task from spring-boot-gradle-plugin, configured for easier development
 */
bootRun {
    /* Lets you pick Spring Boot profile by system properties, e.g. gradle bootRun -Dspring.profiles.active=dev */
    systemProperties = System.properties
}
